{"version":3,"file":"content.js","mappings":"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","sources":["webpack://badoo-scraper-extension/./src/content_scripts/scrape.ts"],"sourcesContent":["\"use strict\";\n// Content script for Badoo scraping\n// - Observes the DOM for profile cards\n// - Extracts a small profile object per card\n// - Batches and sends results to the background service worker\nconst BATCH_SIZE = 10;\nconst FLUSH_MS = 5000;\nlet buffer = [];\nlet seen = new Set();\nlet flushTimer;\nlet scrapingEnabled = true;\nfunction nowISO() {\n    return new Date().toISOString();\n}\nfunction normalizeUrl(u) {\n    try {\n        return new URL(u, window.location.href).href;\n    }\n    catch (e) {\n        return u;\n    }\n}\nfunction extractIdFromUrl(url) {\n    // heuristic: use last path segment or query param\n    try {\n        const u = new URL(url, window.location.href);\n        const parts = u.pathname.split('/').filter(Boolean);\n        return parts.length ? parts[parts.length - 1] : url;\n    }\n    catch (e) {\n        return url;\n    }\n}\nfunction textOrNull(el) {\n    var _a;\n    if (!el)\n        return null;\n    const t = (_a = el.textContent) === null || _a === void 0 ? void 0 : _a.trim();\n    return t && t.length ? t : null;\n}\nfunction parseAge(text) {\n    if (!text)\n        return null;\n    const m = text.match(/(\\d{1,3})/);\n    return m ? parseInt(m[1], 10) : null;\n}\nfunction extractProfileFromCard(card) {\n    // find a profile link\n    const anchor = card.querySelector('a[href*=\"/profile\"], a[href*=\"/user\"], a');\n    const url = anchor ? normalizeUrl(anchor.href) : normalizeUrl(card.getAttribute('data-url') || window.location.href);\n    const id = extractIdFromUrl(url || window.location.href);\n    if (!id)\n        return null;\n    const nameEl = card.querySelector('[data-test=\"user-name\"], .user-name, .profile-name, h3, h2, .name');\n    const ageEl = card.querySelector('.age, .user-age');\n    const locationEl = card.querySelector('.location, .user-location');\n    const bioEl = card.querySelector('.bio, .description, .user-bio');\n    const imgs = Array.from(card.querySelectorAll('img'))\n        .map((i) => i.src || i.getAttribute('data-src') || '')\n        .filter(Boolean)\n        .map(normalizeUrl);\n    const profile = {\n        id,\n        url,\n        name: textOrNull(nameEl) || undefined,\n        age: parseAge(textOrNull(ageEl)),\n        location: textOrNull(locationEl) || undefined,\n        photos: imgs.length ? imgs : undefined,\n        bio: textOrNull(bioEl) || undefined,\n        scrapedAt: nowISO(),\n    };\n    return profile;\n}\nfunction enqueue(p) {\n    if (seen.has(p.id))\n        return;\n    seen.add(p.id);\n    buffer.push(p);\n    if (buffer.length >= BATCH_SIZE)\n        flushBuffer();\n    scheduleFlush();\n}\nfunction scheduleFlush() {\n    if (flushTimer)\n        return;\n    flushTimer = window.setTimeout(() => {\n        flushTimer = undefined;\n        flushBuffer();\n    }, FLUSH_MS);\n}\nfunction flushBuffer() {\n    if (!buffer.length)\n        return;\n    const toSend = buffer.slice();\n    buffer = [];\n    try {\n        chrome.runtime.sendMessage({ type: 'SCRAPE_BATCH', items: toSend }, (resp) => {\n            // optional ACK handling\n            // console.log('background ack', resp);\n        });\n    }\n    catch (e) {\n        console.error('Failed to send scrape batch', e);\n    }\n}\nfunction scanAndExtract() {\n    if (!scrapingEnabled)\n        return;\n    // Heuristic selectors for cards on Badoo â€” try common wrapper classes\n    const candidates = Array.from(document.querySelectorAll('[data-test=\"user-card\"], .user-card, .profile, .profile-item, [data-qa=\"card\"]'));\n    if (!candidates.length) {\n        // broad fallback: anchor cards\n        const alt = Array.from(document.querySelectorAll('a[href*=\"/profile\"], a[href*=\"/user\"]'));\n        alt.forEach(a => {\n            const parent = a.closest('article, li, div');\n            if (parent)\n                candidates.push(parent);\n        });\n    }\n    for (const c of candidates) {\n        const p = extractProfileFromCard(c);\n        if (p)\n            enqueue(p);\n    }\n}\nconst observer = new MutationObserver((mutations) => {\n    for (const m of mutations) {\n        if (m.addedNodes && m.addedNodes.length) {\n            scanAndExtract();\n            break;\n        }\n    }\n});\nfunction startObserving() {\n    observer.observe(document.body, { childList: true, subtree: true });\n    // initial scan\n    scanAndExtract();\n}\nfunction stopObserving() {\n    observer.disconnect();\n    scrapingEnabled = false;\n    if (flushTimer) {\n        clearTimeout(flushTimer);\n        flushTimer = undefined;\n    }\n    flushBuffer();\n}\n// Listen for commands from popup/background\nchrome.runtime.onMessage.addListener((msg, _sender, sendResponse) => {\n    if (!msg || !msg.type)\n        return;\n    if (msg.type === 'START_SCRAPING') {\n        scrapingEnabled = true;\n        startObserving();\n        sendResponse({ status: 'started' });\n    }\n    else if (msg.type === 'STOP_SCRAPING') {\n        stopObserving();\n        sendResponse({ status: 'stopped' });\n    }\n    else if (msg.type === 'FLUSH') {\n        flushBuffer();\n        sendResponse({ status: 'flushed' });\n    }\n});\n// Monitor SPA navigation (pushState/replaceState)\n(() => {\n    const _push = history.pushState;\n    history.pushState = function (...args) {\n        // @ts-ignore\n        const r = _push.apply(this, args);\n        setTimeout(scanAndExtract, 500);\n        return r;\n    };\n    const _replace = history.replaceState;\n    history.replaceState = function (...args) {\n        // @ts-ignore\n        const r = _replace.apply(this, args);\n        setTimeout(scanAndExtract, 500);\n        return r;\n    };\n    window.addEventListener('popstate', () => setTimeout(scanAndExtract, 500));\n})();\n// Start by default\nstartObserving();\n// Expose a small debug hook\nwindow.__badooScraper = {\n    flush: flushBuffer,\n    getBuffer: () => buffer.slice(),\n    getSeen: () => Array.from(seen),\n};\n"],"names":["flushTimer","buffer","seen","Set","scrapingEnabled","normalizeUrl","u","URL","window","location","href","e","textOrNull","el","_a","t","textContent","trim","length","parseAge","text","m","match","parseInt","extractProfileFromCard","card","anchor","querySelector","url","getAttribute","id","parts","pathname","split","filter","Boolean","extractIdFromUrl","nameEl","ageEl","locationEl","bioEl","imgs","Array","from","querySelectorAll","map","i","src","name","undefined","age","photos","bio","scrapedAt","Date","toISOString","enqueue","p","has","add","push","flushBuffer","setTimeout","toSend","slice","chrome","runtime","sendMessage","type","items","resp","console","error","scanAndExtract","candidates","document","forEach","a","parent","closest","c","observer","MutationObserver","mutations","addedNodes","startObserving","observe","body","childList","subtree","onMessage","addListener","msg","_sender","sendResponse","status","disconnect","clearTimeout","_push","history","pushState","args","r","apply","this","_replace","replaceState","addEventListener","__badooScraper","flush","getBuffer","getSeen"],"sourceRoot":""}