{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://badoo-scraper-extension/./src/popup/popup.ts"],"sourcesContent":["\"use strict\";\n// popup.ts\ndocument.addEventListener('DOMContentLoaded', () => {\n    const startBtn = document.getElementById('start-button');\n    const stopBtn = document.getElementById('stop-button');\n    const exportBtn = document.getElementById('export-button');\n    const clearBtn = document.getElementById('clear-button');\n    const countEl = document.getElementById('count');\n    const statusEl = document.getElementById('status');\n    const proxyEl = document.getElementById('proxy');\n    const saveProxyBtn = document.getElementById('save-proxy');\n    const DEFAULT_PROXY = '8fceb83bb599108e7733:5327b6152674503f@gw.dataimpulse.com:823';\n    if (proxyEl) {\n        // load saved proxy or default\n        chrome.runtime.sendMessage({ type: 'GET_PROXY' }, (resp) => {\n            if (resp && resp.proxy)\n                proxyEl.value = resp.proxy;\n            else\n                proxyEl.value = DEFAULT_PROXY;\n        });\n    }\n    const uploadUrlEl = document.getElementById('uploadUrl');\n    const autoUploadEl = document.getElementById('autoUpload');\n    const saveUploadBtn = document.getElementById('save-upload');\n    if (uploadUrlEl && autoUploadEl) {\n        chrome.runtime.sendMessage({ type: 'GET_UPLOAD_URL' }, (resp) => {\n            if (resp && resp.uploadUrl)\n                uploadUrlEl.value = resp.uploadUrl;\n            autoUploadEl.checked = !!(resp && resp.autoUpload);\n        });\n    }\n    function setStatus(text) {\n        if (statusEl)\n            statusEl.textContent = text;\n    }\n    function refreshCount() {\n        chrome.runtime.sendMessage({ type: 'GET_COUNT' }, (resp) => {\n            if (resp && resp.count != null) {\n                if (countEl)\n                    countEl.textContent = String(resp.count);\n            }\n        });\n    }\n    if (startBtn) {\n        startBtn.addEventListener('click', () => {\n            chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n                if (!tabs || !tabs[0] || typeof tabs[0].id === 'undefined') {\n                    setStatus('No active tab');\n                    return;\n                }\n                chrome.tabs.sendMessage(tabs[0].id, { type: 'START_SCRAPING' }, (resp) => {\n                    setStatus('Scraping started');\n                    refreshCount();\n                });\n            });\n        });\n    }\n    if (stopBtn) {\n        stopBtn.addEventListener('click', () => {\n            chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n                if (!tabs || !tabs[0] || typeof tabs[0].id === 'undefined') {\n                    setStatus('No active tab');\n                    return;\n                }\n                chrome.tabs.sendMessage(tabs[0].id, { type: 'STOP_SCRAPING' }, (resp) => {\n                    setStatus('Scraping stopped');\n                    refreshCount();\n                });\n            });\n        });\n    }\n    if (exportBtn) {\n        exportBtn.addEventListener('click', () => {\n            setStatus('Preparing CSV...');\n            chrome.runtime.sendMessage({ type: 'EXPORT_CSV' }, (resp) => {\n                if (!resp || resp.status !== 'ok') {\n                    setStatus('Export failed');\n                    return;\n                }\n                const csv = resp.csv || '';\n                const blob = new Blob([csv], { type: 'text/csv' });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                const ts = new Date().toISOString().replace(/[:.]/g, '-');\n                a.download = `badoo-scrape-${ts}.csv`;\n                a.click();\n                URL.revokeObjectURL(url);\n                setStatus(`Exported ${resp.count || 0} rows`);\n            });\n        });\n    }\n    if (clearBtn) {\n        clearBtn.addEventListener('click', () => {\n            chrome.runtime.sendMessage({ type: 'CLEAR_SCRAPED' }, (resp) => {\n                if (resp && resp.status === 'ok') {\n                    setStatus('Cleared stored profiles');\n                    if (countEl)\n                        countEl.textContent = '0';\n                }\n            });\n        });\n    }\n    if (saveProxyBtn && proxyEl) {\n        saveProxyBtn.addEventListener('click', () => {\n            const val = proxyEl.value.trim();\n            chrome.runtime.sendMessage({ type: 'SAVE_PROXY', proxy: val }, (resp) => {\n                if (resp && resp.status === 'ok')\n                    setStatus('Proxy saved');\n                else\n                    setStatus('Save failed');\n            });\n        });\n    }\n    if (saveUploadBtn && uploadUrlEl && autoUploadEl) {\n        saveUploadBtn.addEventListener('click', () => {\n            const url = uploadUrlEl.value.trim() || null;\n            const auto = !!autoUploadEl.checked;\n            chrome.runtime.sendMessage({ type: 'SAVE_UPLOAD_URL', uploadUrl: url, autoUpload: auto }, (resp) => {\n                if (resp && resp.status === 'ok')\n                    setStatus('Upload settings saved');\n                else\n                    setStatus('Save failed');\n            });\n        });\n    }\n    // initial refresh\n    refreshCount();\n});\n"],"names":["document","addEventListener","startBtn","getElementById","stopBtn","exportBtn","clearBtn","countEl","statusEl","proxyEl","saveProxyBtn","chrome","runtime","sendMessage","type","resp","proxy","value","uploadUrlEl","autoUploadEl","saveUploadBtn","setStatus","text","textContent","refreshCount","count","String","uploadUrl","checked","autoUpload","tabs","query","active","currentWindow","id","status","csv","blob","Blob","url","URL","createObjectURL","a","createElement","href","ts","Date","toISOString","replace","download","click","revokeObjectURL","val","trim","auto"],"sourceRoot":""}